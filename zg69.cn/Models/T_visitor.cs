//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//     Website: http://ITdos.com/Dos/ORM/Index.html
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Data;
using System.Data.Common;
using Dos.ORM;
using Dos.ORM.Common;

namespace ZG69.Model
{

	/// <summary>
	/// 实体类T_visitor 。(属性说明自动提取数据库字段的描述信息)
	/// </summary>
	[Table("T_visitor")]
	[Serializable]
	public partial class T_visitor : Entity 
	{
		#region Model
		private int _ID;
		private string _City;
		private string _IP;
		private string _Date;
		private string _PageUrl;
		private string _Other;
		/// <summary>
		/// 
		/// </summary>
		public int ID
		{
			get{ return _ID; }
			set
			{
				this.OnPropertyValueChange(_.ID,_ID,value);
				this._ID=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string City
		{
			get{ return _City; }
			set
			{
				this.OnPropertyValueChange(_.City,_City,value);
				this._City=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string IP
		{
			get{ return _IP; }
			set
			{
				this.OnPropertyValueChange(_.IP,_IP,value);
				this._IP=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string Date
		{
			get{ return _Date; }
			set
			{
				this.OnPropertyValueChange(_.Date,_Date,value);
				this._Date=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string PageUrl
		{
			get{ return _PageUrl; }
			set
			{
				this.OnPropertyValueChange(_.PageUrl,_PageUrl,value);
				this._PageUrl=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string Other
		{
			get{ return _Other; }
			set
			{
				this.OnPropertyValueChange(_.Other,_Other,value);
				this._Other=value;
			}
		}
		#endregion

		#region Method
		/// <summary>
		/// 获取实体中的标识列
		/// </summary>
		public override Field GetIdentityField()
		{
			return _.ID;
		}
		/// <summary>
		/// 获取实体中的主键列
		/// </summary>
		public override Field[] GetPrimaryKeyFields()
		{
			return new Field[] {
				_.ID};
		}
		/// <summary>
		/// 获取列信息
		/// </summary>
		public override Field[] GetFields()
		{
			return new Field[] {
				_.ID,
				_.City,
				_.IP,
				_.Date,
				_.PageUrl,
				_.Other};
		}
		/// <summary>
		/// 获取值信息
		/// </summary>
		public override object[] GetValues()
		{
			return new object[] {
				this._ID,
				this._City,
				this._IP,
				this._Date,
				this._PageUrl,
				this._Other};
		}
		#endregion

		#region _Field
		/// <summary>
		/// 字段信息
		/// </summary>
		public class _
		{
			/// <summary>
			/// * 
			/// </summary>
			public readonly static Field All = new Field("*","T_visitor");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field ID = new Field("ID","T_visitor","ID");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field City = new Field("City","T_visitor","City");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field IP = new Field("IP","T_visitor","IP");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field Date = new Field("Date","T_visitor","Date");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field PageUrl = new Field("PageUrl","T_visitor","PageUrl");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field Other = new Field("Other","T_visitor","Other");
		}
		#endregion


	}
}

